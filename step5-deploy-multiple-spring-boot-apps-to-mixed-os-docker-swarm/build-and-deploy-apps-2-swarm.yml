---
- hosts: all
  vars:
    application_stack_name: clearsky
    registry_host: 172.16.2.10:5000
    swarm_network_name: mixed_swarm_net
    docker_domain: masterlinux01.test
    base_path_windows: "C:\\springboot"
    base_path_linux: "/tmp/springboot"
    services:
    #  - name: zuul-edgeservice
    #    path_to_jar: "../../cxf-spring-cloud-netflix-docker/zuul-edgeservice/target/zuul-edgeservice-0.0.1-SNAPSHOT.jar"
    #    port: 8080
    #    map_to_same_port_on_host: true
    #    service_registry_name: eureka-serviceregistry
    #    deploy_target: windows

      - name: eureka-serviceregistry
        path_to_jar: "../../cxf-spring-cloud-netflix-docker/eureka-serviceregistry/target/eureka-serviceregistry-0.0.1-SNAPSHOT.jar"
        port: 8761
        service_registry_name: eureka-serviceregistry
        deploy_target: linux

      - name: weatherbackend
        path_to_jar: "../../cxf-spring-cloud-netflix-docker/weatherbackend/target/weatherbackend-0.0.1-SNAPSHOT.jar"
        port: 8090
        service_registry_name: eureka-serviceregistry
        deploy_target: linux

      - name: weatherbockend
        path_to_jar: "../../cxf-spring-cloud-netflix-docker/weatherbackend/target/weatherbackend-0.0.1-SNAPSHOT.jar"
        port: 8091
        service_registry_name: eureka-serviceregistry
        deploy_target: windows

      - name: weatherservice
        path_to_jar: "../../cxf-spring-cloud-netflix-docker/weatherservice/target/weatherservice-0.0.1-SNAPSHOT.jar"
        port: 8095
        service_registry_name: eureka-serviceregistry
        deploy_target: windows

  tasks:

  - name: Create Docker build directory /tmp/springboot on Linux manager node, if not there
    file:
      path: "{{base_path_linux}}"
      state: directory
      mode: 0755
    when: inventory_hostname == "masterlinux01"
    tags: buildapps

  - name: Create Docker build directory C:\springboot on Windows manager node, if not there
    win_file:
      path: "{{base_path_windows}}"
      state: directory
    when: inventory_hostname == "masterwindows01"
    tags: buildapps

  - name: Build Linux Apps Docker images on Linux manager node and push to Docker Swarm registry
    include_tasks: prepare-docker-images-linux.yml
    with_items: "{{ vars.services }}"
    when: inventory_hostname == "masterlinux01" and item.deploy_target == 'linux'
    tags: buildapps

  - name: Build Windows Apps Docker images on Windows manager node and push to Docker Swarm registry
    include_tasks: prepare-docker-images-windows.yml
    with_items: "{{ vars.services }}"
    when: inventory_hostname == "masterwindows01" and item.deploy_target == 'windows'
    tags: buildapps

  - name: Open all published ports of every app on every node for later access from outside the Swarm
    include_tasks: prepare-firewall-app-access.yml
    with_items: "{{ vars.services }}"
    tags: buildapps

  - name: Deploy the Stack to the Swarm on Windows Manager node
    include_tasks: deploy-services-swarm.yml
    when: inventory_hostname == "masterwindows01"

#  - name: Do healthchecks for all services
#    include_tasks: spring-boot-app-health-check.yml
#    with_items: "{{ vars.services }}"