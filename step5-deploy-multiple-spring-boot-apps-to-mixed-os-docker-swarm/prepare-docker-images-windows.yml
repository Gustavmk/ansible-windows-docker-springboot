---
  - name: Defining needed variables
    set_fact:
      spring_boot_app:
        name: "{{ item.name }}"
        port: "{{ item.port }}"
        jar: "{{ item.path_to_jar }}"
        registry_name: "{{ item.service_registry_name }}"

  - name: Preparing the following Spring Boot App´s Docker build files
    debug:
      msg: "Processing '{{spring_boot_app.name}}' with port '{{ spring_boot_app.port }}' on {{ item.deploy_target }}"

  - name: Create directory C:\springboot\spring_boot_app.name, if not there
    win_file:
      path: "{{base_path_windows}}\\{{spring_boot_app.name}}"
      state: directory

  - name: Template and copy Spring Boot app´s Dockerfile to directory C:\springboot\spring_boot_app.name
    win_template:
      src: "templates/Dockerfile-SpringBoot-Windows.j2"
      dest: "{{base_path_windows}}\\{{spring_boot_app.name}}\\Dockerfile"

  - name: Copy Spring Boot app´s jar-File to directory C:\springboot\spring_boot_app.name
    win_copy:
      src: "{{spring_boot_app.jar}}"
      dest: "{{base_path_windows}}\\{{spring_boot_app.name}}\\{{spring_boot_app.name}}.jar"

  - name: Remove existing App´s Docker Container image
    win_shell: "docker rmi {{registry_host}}/{{spring_boot_app.name}}:latest --force"
    ignore_errors: yes

  - name: Build the App´s Docker Container image
    win_shell: "docker build . --tag {{registry_host}}/{{spring_boot_app.name}}:latest"
    args:
      chdir: "{{base_path_windows}}\\{{spring_boot_app.name}}"

  - name: Push the Docker Container image to the Swarm Registry
    win_shell: "docker push {{registry_host}}/{{spring_boot_app.name}}:latest"
