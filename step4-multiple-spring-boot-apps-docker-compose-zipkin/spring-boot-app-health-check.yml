---
  - name: Defining needed variables
    set_fact:
      spring_boot_app:
        name: "{{ item.name }}"
        port: "{{ item.port }}"

  - name: Obtain the Docker Container´s internal IP address (because localhost doesn´t work for now https://github.com/docker/for-win/issues/458)
    win_shell: "docker inspect -f {% raw %}'{{ .NetworkSettings.Networks.nat.IPAddress }}' {% endraw %} springboot_{{spring_boot_app.name}}_1 {{ '>' }} container_ip.txt"

  - name: Get the Docker Container´s internal IP address from the temporary txt-file (we have to do this because of templating problems, see http://stackoverflow.com/a/32279729/4964553)
    win_shell: cat container_ip.txt
    register: win_shell_txt_return

  - name: Define the IP as variable
    set_fact:
      docker_container_ip: "{{ win_shell_txt_return.stdout.splitlines()[0] }}"

  - debug:
      msg: "The Docker Container that runs your App '{{spring_boot_app.name}}' has the internal IP {{ docker_container_ip }} --> Let´s do a health-check against this URI: 'http://{{ docker_container_ip }}:{{spring_boot_app.port}}/health'"

  # Spring Boot Actuators strange Content-Type 'application/vnd.spring-boot.actuator.v1+json' when calling
  # http://appname:port/health can be avoided by using the a correct header: 'Accept: application/json'
  # Doing so, the app reacts with a normal 'application/json' in the response and the healthcheck run's fine again :)
  - name: Wait until our Spring Boot app is up & running
    win_uri:
      url: "http://{{ docker_container_ip }}:{{spring_boot_app.port}}/health"
      method: GET
      headers:
        Accept: application/json
    register: health_result
    until: health_result.status_code == 200  
    retries: 10
    delay: 10
    ignore_errors: yes

  - name: Show some more info, only when health check went wrong
    win_uri:
      url: "http://{{ docker_container_ip }}:{{spring_boot_app.port}}/health"
      method: GET
    register: health_bad_result
    ignore_errors: yes
    when: health_result|failed

  - name: Show some more info, only when health check went wrong
    debug:
      msg: "The app reacted with: {{health_bad_result}}"
    when: health_result|failed

