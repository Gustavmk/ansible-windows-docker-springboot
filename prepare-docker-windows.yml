---

  - name: Get Windows Build Number
    win_file_version:
      path: C:\Windows\System32\hal.dll
    register: hal_dll_version_return

  - name: Fail, if Windows Build number doesn´t support Windows Docker Containers correctly
    fail:
      msg: "Windows Build Number {{hal_dll_version_return.win_file_version.product_version}} doesn´t support Windows Docker Container correctly ({{hal_dll_version_return.win_file_version.file_private_part}} is to small)"
    when: hal_dll_version_return.win_file_version.file_private_part|int < 206

  - name: Congratulations
    debug:
      msg: "With your Build Number {{hal_dll_version_return.win_file_version.product_version}} you have choosen a good basis for Windows Docker Containers!"

  - name: Check if Containers are already installed as Windows Feature   
    win_shell: Get-WindowsFeature –Name Containers | Where Installed
    register: check_feature_container_installed

  # Only install the feature, if not already installed - it´s not installed,
  # if Get-WindowsFeature –Name FeatureName | Where Installed returns an empty response 
  - name: Install Containers natively as Windows Feature (only, if not already installed)   
    win_shell: Enable-WindowsOptionalFeature -Online -FeatureName containers -All -NoRestart
    when: check_feature_container_installed.stdout == ''
    ignore_errors: yes
    register: feature_container_installation   

  - name: Check if Hyper-V is already installed as Windows Feature   
    win_shell: Get-WindowsFeature –Name Hyper-V | Where Installed
    register: check_feature_hyperv_installed

  - name: Install Hyper-V as Windows Feature (only, if not already installed)    
    win_shell: Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart
    when: check_feature_hyperv_installed.stdout == ''
    ignore_errors: yes
    register: feature_hyperv_installation

    # Because win_reboot doesnt recognize that the virtual machine is already up, we set the timeouts way lower & ignore_errors: yes
  - name: When Containers and/or Hyper-V had to be installed, we have to reboot the Machine to have them take effect (mostly this step will fail, but it should work nevertheless)
    win_reboot:
      reboot_timeout_sec: 20
      shutdown_timeout_sec: 20
    when: feature_container_installation.changed or feature_hyperv_installation.changed
    ignore_errors: yes

  - name: Install Docker via chocolatey
    win_chocolatey:
      name: docker

  - name: Checking if Docker Windows Service is already configured
    win_service:
      name: docker
    register: docker_service_info

  # Only register & start Docker Windows Service, if not already done before
  - name: Register Docker as a Windows Service (if not already there)
    win_shell: "C:\\ProgramData\\chocolatey\\lib\\docker\\tools\\docker\\dockerd.exe --register-service"
    when: docker_service_info.state != 'running'
    ignore_errors: yes

  - name: Start Docker as Windows Service (if not already running)
    win_service:
      name: docker
      state: started

  - name: Pull the small Windows Docker Base Image microsoft/nanoserver from hub.docker.com
    win_shell: docker pull microsoft/nanoserver  

  - name: Get the second (but 10GB big) Windows Docker Base Image microsoft/windowsservercore from hub.docker.com (you may grab a coffee now...)
    win_shell: docker pull microsoft/windowsservercore 

  - name: Install Sysinternals Utilities, so that we can observe the Docker processes with the help of the Process Monitor´s Process Tree
    win_chocolatey:
      name: sysinternals

