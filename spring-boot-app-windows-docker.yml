---
  - name: Create directory C:\spring-boot\spring_boot_app_name, if not there
    win_file: path={{spring_boot_app.path}} state=directory

  - name: Install wget for downloading JRE
    win_chocolatey:
      name: wget

  - name: Check if JRE was already downloaded
    win_stat:
      path: "{{spring_boot_app.path}}\\{{server_jre_name}}"
    register: server_jre_on_server

    ### As of Ansible 2.2 there´s only win_stat module available (and not win_find) - so we have to use a win_stat.stat attribute like size to check,
    ### if the JRE is already downloaded - because the return values arent defined, if there´s no file, this check should work for us
  - name: Download Server JRE to C:\spring-boot\spring_boot_app_name (only if not already done before)    
    win_shell: "wget.exe --no-cookies --no-check-certificate --header \"Cookie: oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u{{java8_update_version}}-{{java_build_version}}/e9e7ea248e2c4826b92b3f075a80e441/{{server_jre_name}}\" -O {{spring_boot_app.path}}\\{{server_jre_name}}"
    when: server_jre_on_server.stat.size is undefined

  - name: Template and copy Spring Boot app´s Dockerfile to directory C:\spring-boot\spring_boot_app_name
    win_template:
      src: "templates/Dockerfile.j2"
      dest: "{{spring_boot_app.path}}\\Dockerfile"

  - name: Copy Spring Boot app´s jar-File to directory C:\spring-boot\spring_boot_app_name
    win_copy:
      src: "{{spring_boot_app_jar}}"
      dest: "{{spring_boot_app.path}}\\{{spring_boot_app_name}}.jar"

  - name: Remove the Service Docker Container Image
    win_shell: docker rmi {{spring_boot_app_name}}:latest --force
    ignore_errors: yes

  - name: Build the service Docker Image
    win_shell: docker build . --tag {{spring_boot_app_name}}:latest
    args:
      chdir: "{{spring_boot_app.path}}"

  - name: Stop the service docker container
    win_shell: docker stop {{spring_boot_app_name}}
    ignore_errors: yes

  - name: Remove the service docker container
    win_shell: docker rm {{spring_boot_app_name}} --force
    ignore_errors: yes

  - name: Run the service docker image
    win_shell: "docker run -d --publish {{spring_boot_app.port}}:{{spring_boot_app.port}} --name={{spring_boot_app_name}} --restart=unless-stopped {{spring_boot_app_name}}:latest"

