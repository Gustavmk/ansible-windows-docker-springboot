---

- hosts: all
  vars:
    masterwindows_ip: 172.16.2.12

  tasks:
  - name: Checking Ansible connectivity to Windows nodes
    win_ping:
    when: inventory_hostname in groups['windows']

  - name: Checking Ansible connectivity to Linux nodes
    ping:
    when: inventory_hostname in groups['linux']

  - name: Allow connection to Windows Manager nodes Docker Swarm port 2377
    win_shell: "netsh firewall add portopening TCP 2377 'Port 2377'"
    when: inventory_hostname in groups['masterwindows']

  - name: Leave Swarm on Windows master node, if there was a cluster before
    win_shell: "docker swarm leave --force"
    ignore_errors: yes
    when: inventory_hostname == "masterwindows01"

  - name: Initialize Docker Swarm cluster on Windows master node
    win_shell: "docker swarm init --advertise-addr={{masterwindows_ip}} --listen-addr {{masterwindows_ip}}:2377"
    ignore_errors: yes
    when: inventory_hostname == "masterwindows01"

  - name: Obtain worker join-token from Windows master node
    win_shell: "docker swarm join-token worker -q"
    register: worker_token_result
    ignore_errors: yes
    when: inventory_hostname == "masterwindows01"

  - name: Obtain manager join-token from Windows master node
    win_shell: "docker swarm join-token manager -q"
    register: manager_token_result
    ignore_errors: yes
    when: inventory_hostname == "masterwindows01"

  - name: Syncing the worker and manager join-token results to the other hosts
    set_fact:
      worker_token_result_host_sync: "{{ hostvars['masterwindows01']['worker_token_result'] }}"
      manager_token_result_host_sync: "{{ hostvars['masterwindows01']['manager_token_result'] }}"

  - name: Extracting and saving worker and manager join-tokens in variables for joining other nodes later
    set_fact:
      worker_jointoken: "{{worker_token_result_host_sync.stdout.splitlines()[0]}}"
      manager_jointoken: "{{manager_token_result_host_sync.stdout.splitlines()[0]}}"

  - name: Join-tokens...
    debug:
      msg:
        - "The worker join-token is: '{{worker_jointoken}}'"
        - "The manager join-token is: '{{manager_jointoken}}'"

  - name: Leave Swarm on Windows worker nodes, if there was a cluster before
    win_shell: "docker swarm leave"
    ignore_errors: yes
    when: inventory_hostname in groups['workerwindows']

  - name: Add Windows worker nodes to Docker Swarm cluster
    win_shell: "docker swarm join --token {{worker_jointoken}} {{masterwindows_ip}}"
    ignore_errors: yes
    when: inventory_hostname in groups['workerwindows']

  - name: Leave Swarm on Linux worker nodes, if there was a cluster before
    shell: "docker swarm leave"
    ignore_errors: yes
    when: inventory_hostname in groups['workerlinux']

  - name: Add Linux worker nodes to Docker Swarm cluster
    shell: "docker swarm join --token {{worker_jointoken}} {{masterwindows_ip}}"
    ignore_errors: yes
    when: inventory_hostname in groups['workerlinux']

  - name: Leave Swarm on Linux manager nodes, if there was a cluster before
    shell: "docker swarm leave --force"
    ignore_errors: yes
    when: inventory_hostname in groups['masterlinux']

  - name: Add Linux manager nodes to Docker Swarm cluster
    shell: "docker swarm join --token {{manager_jointoken}} {{masterwindows_ip}}"
    ignore_errors: yes
    when: inventory_hostname in groups['masterlinux']

  - name: Obtain Docker Swarm status
    win_shell: "docker node ls"
    register: overview_result
    ignore_errors: yes
    when: inventory_hostname == "masterwindows01"

  - name: Swarm initialized...
    debug:
      msg:
        - "The status of the Swarm now is:"
        - "{{overview_result.stdout_lines}}"
    when: inventory_hostname == "masterwindows01"