---
- hosts: "{{host}}"
  vars:
    spring_boot_app_path: "C:\\spring-boot\\{{spring_boot_app_name}}"
    path_to_java_exe: "C:\\ProgramData\\Oracle\\Java\\javapath\\java.exe"

  tasks:
  ###### Preparation steps
  - name: Create directory C:\spring-boot\spring_boot_app_name, if not there
    win_file: path={{spring_boot_app_path}} state=directory

#  - name: Install Containers natively as Windows Feature   
#    win_shell: Enable-WindowsOptionalFeature -Online -FeatureName containers -All
#    ignore_errors: yes   

#  - name: Install Hyper-V as Windows Feature    
#    win_shell: Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
#    ignore_errors: yes

# Irgendwie ein If einbauen, ob die oberen Befehle ausgeführt wurden - nur dann neustarten
#  - name: Reboot Machine to have Containers & Hyper-V take effect
#    win_reboot:


  - name: Install Docker via chocolatey
    win_chocolatey:
      name: docker

  - name: Register Docker as a Windows Service (if not already there)
    win_shell: "C:\\ProgramData\\chocolatey\\lib\\docker\\tools\\docker\\dockerd.exe --register-service"
    ignore_errors: yes

  - name: Start Docker as Windows Service
    win_shell: Start-Service Docker

  - name: Create directory C:\spring-boot\spring_boot_app_name\windowsservercore-oraclejdk8, if not there
    win_file: path={{spring_boot_app_path}}\windowsservercore-oraclejdk8 state=directory

  - name: Copy Java 8 zip to directory C:\spring-boot\spring_boot_app_name\windowsservercore-oraclejdk8
    win_copy:
      src: "windowsservercore-oraclejdk8/server-jre-8u121-windows-x64.tar.gz"
      dest: "{{spring_boot_app_path}}\\windowsservercore-oraclejdk8\\server-jre-8u121-windows-x64.tar.gz"

  - name: Copy Java 8 Windows Dockerfile to directory C:\spring-boot\spring_boot_app_name\windowsservercore-oraclejdk8
    win_template:
      src: "windowsservercore-oraclejdk8/Dockerfile"
      dest: "{{spring_boot_app_path}}\\windowsservercore-oraclejdk8\\Dockerfile"

  - name: Pull the small Windows Docker Base Image microsoft/nanoserver from hub.docker.com
    win_shell: docker pull microsoft/nanoserver  

  - name: Get the second (but 10GB big) Windows Docker Base Image microsoft/windowsservercore from hub.docker.com (you may grab a coffee now...)
    win_shell: docker pull microsoft/windowsservercore  

  - name: Build the Java 8 Windows Docker Image
    win_shell: docker build . --tag jonashackt/windowsservercore-oraclejdk8:latest
    args:
      chdir: "{{spring_boot_app_path}}\\windowsservercore-oraclejdk8"


  - name: Template and copy Spring Boot app´s Dockerfile to directory C:\spring-boot\spring_boot_app_name
    win_template:
      src: "templates/Dockerfile.j2"
      dest: "{{spring_boot_app_path}}\\Dockerfile"

  - name: Copy Spring Boot app´s jar-File to directory C:\spring-boot\spring_boot_app_name
    win_copy:
      src: "{{spring_boot_app_jar}}"
      dest: "{{spring_boot_app_path}}\\{{spring_boot_app_name}}.jar"

  - name: Remove the Service Docker Container Image
    win_shell: docker rmi {{spring_boot_app_name}}:latest
    ignore_errors: yes

  - name: Build the service Docker Image
    win_shell: docker build . --tag {{spring_boot_app_name}}:latest
    args:
      chdir: "{{spring_boot_app_path}}"

  - name: Stop the service docker container
    win_shell: docker stop {{spring_boot_app_name}}
    ignore_errors: yes

  - name: Remove the service docker container
    win_shell: docker rm {{spring_boot_app_name}}
    ignore_errors: yes

  - name: Run the service docker image
    win_shell: docker run -d --name={{spring_boot_app_name}} --restart=unless-stopped {{spring_boot_app_name}}:latest




  ###### Smoke test, if app has booted up correctly
  - name: Wait until our Spring Boot app is up & running
    win_uri:
      url: "http://localhost:8080/swagger-ui.html"
      method: GET
    register: result
    until: result.status_code == 200  
    retries: 5
    delay: 5

